[{"/home/marc/MastrMind/root/mastrmind_frontend/src/index.js":"1","/home/marc/MastrMind/root/mastrmind_frontend/src/App.js":"2","/home/marc/MastrMind/root/mastrmind_frontend/src/context/user_context.js":"3","/home/marc/MastrMind/root/mastrmind_frontend/src/components/pages/home.js":"4","/home/marc/MastrMind/root/mastrmind_frontend/src/components/auth/registerPage.js":"5","/home/marc/MastrMind/root/mastrmind_frontend/src/components/auth/loginPage.js":"6","/home/marc/MastrMind/root/mastrmind_frontend/src/components/layout/header.js":"7","/home/marc/MastrMind/root/mastrmind_frontend/src/components/pages/calendar.js":"8","/home/marc/MastrMind/root/mastrmind_frontend/src/components/auth/options.js":"9","/home/marc/MastrMind/root/mastrmind_frontend/src/components/layout/sidebar.js":"10","/home/marc/MastrMind/root/mastrmind_frontend/src/components/pages/event-utils.js":"11","/home/marc/MastrMind/root/mastrmind_frontend/src/components/controller/controller.js":"12","/home/marc/MastrMind/root/mastrmind_frontend/src/components/controller/popup.js":"13","/home/marc/MastrMind/root/mastrmind_frontend/src/components/controller/button.js":"14","/home/marc/MastrMind/root/mastrmind_frontend/src/components/newtask.js":"15","/home/marc/MastrMind/root/mastrmind_frontend/src/components/layout/calendarfunct.js":"16","/home/marc/MastrMind/root/mastrmind_frontend/src/components/controller/event.js":"17"},{"size":142,"mtime":1615237821375,"results":"18","hashOfConfig":"19"},{"size":2386,"mtime":1617923971172,"results":"20","hashOfConfig":"19"},{"size":88,"mtime":1615237821375,"results":"21","hashOfConfig":"19"},{"size":176,"mtime":1617838972314,"results":"22","hashOfConfig":"19"},{"size":4805,"mtime":1616094664728,"results":"23","hashOfConfig":"19"},{"size":3406,"mtime":1616094664727,"results":"24","hashOfConfig":"19"},{"size":820,"mtime":1617838972298,"results":"25","hashOfConfig":"19"},{"size":2041,"mtime":1617923948987,"results":"26","hashOfConfig":"19"},{"size":2594,"mtime":1617838972291,"results":"27","hashOfConfig":"19"},{"size":2536,"mtime":1617924939428,"results":"28","hashOfConfig":"19"},{"size":412,"mtime":1617838972310,"results":"29","hashOfConfig":"19"},{"size":141,"mtime":1616094664737,"results":"30","hashOfConfig":"19"},{"size":4445,"mtime":1617917252238,"results":"31","hashOfConfig":"19"},{"size":735,"mtime":1617917114280,"results":"32","hashOfConfig":"19"},{"size":217,"mtime":1616094664744,"results":"33","hashOfConfig":"19"},{"size":2308,"mtime":1617923969603,"results":"34","hashOfConfig":"19"},{"size":2809,"mtime":1617917390535,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"39vx9y",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},"/home/marc/MastrMind/root/mastrmind_frontend/src/index.js",[],["76","77"],"/home/marc/MastrMind/root/mastrmind_frontend/src/App.js",[],"/home/marc/MastrMind/root/mastrmind_frontend/src/context/user_context.js",[],"/home/marc/MastrMind/root/mastrmind_frontend/src/components/pages/home.js",[],"/home/marc/MastrMind/root/mastrmind_frontend/src/components/auth/registerPage.js",[],"/home/marc/MastrMind/root/mastrmind_frontend/src/components/auth/loginPage.js",[],"/home/marc/MastrMind/root/mastrmind_frontend/src/components/layout/header.js",[],"/home/marc/MastrMind/root/mastrmind_frontend/src/components/pages/calendar.js",["78","79","80","81","82","83"],"import React from 'react'\nimport FullCalendar, { formatDate} from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport { INITIAL_EVENTS, createEventId } from './event-utils'\nimport Sidebar from '../layout/sidebar.js'\nimport Calendarfunct from '../layout/calendarfunct.js'\n\nimport './calendar.css'\n\nexport default class Calendar extends React.Component {\n\n    state = {\n        weekendsVisible: true,\n        currentEvents: []\n    }\n\n    render() {\n        return (\n            <div className='home'>\n                {this.renderSidebar()}\n                <div className='home-main'>\n                    {this.renderCalendar()}\n                </div>\n            </div>\n        )\n    }\n\n    renderSidebar() {\n        return (\n            <Sidebar />\n        )\n    }\n    renderCalendar() {\n        return(\n            <Calendarfunct/>\n        )\n    }\n\n    handleWeekendsToggle = () => {\n        this.setState({\n            weekendsVisible: !this.state.weekendsVisible\n        })\n    }\n\n    handleDateSelect = (selectInfo) => {\n        let title = Calendarfunct.popup.values.name\n        let calendarApi = selectInfo.view.calendar\n\n        calendarApi.unselect()\n\n        if (title) {\n            calendarApi.addEvent({\n                id: createEventId,\n                title,\n                start: selectInfo.endStr,\n                allDay: selectInfo.allDay\n            })\n        }\n    }\n\n    handleEventClick = (clickInfo) => {\n        if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n            clickInfo.event.remove()\n        }\n    }\n\n    handleEvents = (events) => {\n        this.setState({\n            currentEvents: events\n        })\n    }\n\n    renderEventContent(eventInfo) {\n        return (\n            <>\n                <b>{eventInfo.timeText}</b>\n                <i>{eventInfo.event.title}</i>\n            </>\n        )\n    }\n}\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/home/marc/MastrMind/root/mastrmind_frontend/src/components/auth/options.js",[],"/home/marc/MastrMind/root/mastrmind_frontend/src/components/layout/sidebar.js",["84","85"],"import React from 'react'\r\nimport Calendar from '../pages/calendar.js'\r\nimport { formatDate } from '@fullcalendar/react'\r\nimport Controller from '../controller/controller'\r\nimport Popup from  '../controller/popup'\r\nimport newtask from '../newtask'\r\nimport { useState } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function Sidebar() {\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n\r\n    Calendar.state = {\r\n        weekendsVisible: true,\r\n        currentEvents: []\r\n    }\r\n\r\n    Calendar.handleWeekendsToggle = () => {\r\n        Calendar.setState({\r\n            weekendsVisible: !Calendar.state.weekendsVisible\r\n        })\r\n    }\r\n\r\n    return (\r\n            <div className='home-sidebar'>\r\n\r\n                <li>\r\n                <Controller.Button\r\n                text = \"Add Task +\"\r\n                variant = \"outlined\"\r\n                onClick = {() => setOpenPopup(true)}\r\n                />\r\n                </li>\r\n            <Popup\r\n            openPopup = {openPopup}\r\n            setOpenPopup = {setOpenPopup}\r\n            >\r\n            </Popup>\r\n\r\n\r\n\r\n                \r\n                <div className='home-sidebar-section'>\r\n                    <h2>Instructions</h2>\r\n                    <ul>\r\n                        <li>Select dates and you will be prompted to create a new event.</li>\r\n                        <li>Drag, drop, and resize events.</li>\r\n                        <li>Click an event to delete it.</li>\r\n                    </ul>\r\n                </div>\r\n                <div className='home-sidebar-section'>\r\n                    <label>\r\n                        <input\r\n                            type='checkbox'\r\n                            checked={Calendar.state.weekendsVisible}\r\n                            onChange={Calendar.handleWeekendsToggle}\r\n                        ></input>\r\n                        Show/Hide Weekends\r\n                    </label>\r\n                </div>\r\n                <div className='home-sidebar-section'>\r\n                    <h2>All Events ({Calendar.state.currentEvents.length})</h2>\r\n                    <ul>\r\n                        {Calendar.state.currentEvents.map(renderSidebarEvent)}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nfunction renderSidebarEvent(event) {\r\n    return(\r\n        <li key={event.id}>\r\n            <b>{formatDate(event.start, {year: 'numeric', month: 'short', day: 'numeric'})}</b>\r\n            <i>{event.title}</i>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\n\r\n","/home/marc/MastrMind/root/mastrmind_frontend/src/components/pages/event-utils.js",[],"/home/marc/MastrMind/root/mastrmind_frontend/src/components/controller/controller.js",[],"/home/marc/MastrMind/root/mastrmind_frontend/src/components/controller/popup.js",["86","87","88"],"import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Controller from '../controller/controller'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(10),\r\n        position: 'absolute',\r\n        top: theme.spacing(20),\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, setOpenPopup } = props;\r\n    const classes = useStyles();\r\n    const CHARACTER_LIMIT = 25;\r\n    const [values, setValues] = React.useState({\r\n      name: \"\"\r\n    });\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, [name]: event.target.value });\r\n    };\r\n\r\n    return (\r\n        <Dialog open = {openPopup} maxWidth=\"sm\">\r\n            <DialogTitle position=\"center\">\r\n                <div style = {{display: 'flex'}}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{flexGrow:2}}>\r\n                        \r\n                        ADD A NEW TASK\r\n                    </Typography>\r\n                    \r\n                    <CloseIcon\r\n                    color = \"secondary\"\r\n                    variant = \"text\"\r\n                    size = \"small\"\r\n                    variant = \"contained\"\r\n                    onClick = {() => { values.name = \"\"; setOpenPopup(false);}}\r\n                />\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n            <FormGroup aria-label=\"position\" column>\r\n                <TextField\r\n                    label=\"Task Title\"\r\n                    inputProps={{\r\n                    maxlength: CHARACTER_LIMIT\r\n                    }}\r\n                    value={values.name}\r\n                    helperText={`${values.name.length}/${CHARACTER_LIMIT}`}\r\n                    onChange={handleChange(\"name\")}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                    id=\"task\"\r\n                    label=\"New Task\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Get productive!\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                />\r\n                <Box mt={3}>\r\n                <RadioGroup row aria-label=\"priority\" name=\"priority\">\r\n                    <FormLabel component=\"legend\" margin=\"normal\">Task's Priority Level:</FormLabel>\r\n                    <Box mt={1}>\r\n                    <FormControlLabel\r\n                        value=\"high\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"High\"\r\n                        labelPlacement=\"top\"\r\n                        />\r\n                    <FormControlLabel\r\n                        value=\"meduim\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Meduim\"\r\n                        labelPlacement=\"top\"\r\n                        />\r\n                    <FormControlLabel\r\n                        value=\"low\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Low\"\r\n                        labelPlacement=\"top\"\r\n                        />\r\n                    </Box>\r\n                </RadioGroup>\r\n                </Box>\r\n\r\n                <TextField\r\n                    id=\"end_date\"\r\n                    label=\"Finish Date\"\r\n                    type=\"date\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                    }}\r\n                />\r\n\r\n                <Controller.Button\r\n                    text = \"Add Task\"\r\n                    color = \"primary\"\r\n                    variant = \"outlined\"\r\n                    onClick = {() => { values.name = \"\"; setOpenPopup(false);}}\r\n                />\r\n\r\n                \r\n\r\n            </FormGroup>\r\n\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}","/home/marc/MastrMind/root/mastrmind_frontend/src/components/controller/button.js",[],"/home/marc/MastrMind/root/mastrmind_frontend/src/components/newtask.js",[],"/home/marc/MastrMind/root/mastrmind_frontend/src/components/layout/calendarfunct.js",["89","90","91","92"],"import FullCalendar, { formatDate} from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport { INITIAL_EVENTS, createEventId } from '../pages/event-utils'\r\nimport Calendar from '../pages/calendar.js'\r\nimport Event from  '../controller/event.js'\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\nexport default function Calendarfunct(){\r\n    const [openEvent, setOpenEvent] = useState(false)\r\n\r\n    const [event, setEvent] = useState(false)\r\n\r\n    Calendar.state = {\r\n        weekendsVisible: true,\r\n        currentEvents: []\r\n    }\r\n\r\n    Calendar.handleWeekendsToggle = () => {\r\n        Calendar.setState({\r\n            weekendsVisible: !Calendar.state.weekendsVisible\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n\r\n\r\n        <div className='home-main'>\r\n            <Event\r\n            openEvent = {openEvent}\r\n            setOpenEvent = {setOpenEvent}\r\n            >\r\n            </Event>\r\n\r\n            <FullCalendar \r\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                headerToolbar={{\r\n                    left: 'prev next today',\r\n                    center: 'title', \r\n                    right: 'dayGridMonth timeGridWeek timeGridDay'\r\n                }}\r\n                initialView='dayGridMonth'\r\n                showNonCurrentDates={true}\r\n                editable={true}\r\n                selectable={true}\r\n                selectMirror={true}\r\n                dayMaxEvents={true}\r\n                weekends={Calendar.state.weekendsVisible}\r\n                initialEvents={INITIAL_EVENTS} // alternatively, use 'events' setting to fetch from a feed\r\n                select={() => setOpenEvent(true)}\r\n                eventContent={Calendar.toStringrenderEventContent} // custom render function\r\n                eventClick={Calendar.handleEventClick}\r\n                eventsSet={Calendar.handleEvents} //called after events are initialized/added/changed/removed\r\n                /* you can update Mongo DB when these fire:\r\n                eventAdd={function(){}}\r\n                eventChange={function(){}}\r\n                eventRemove={function(){}}\r\n                */ \r\n            />\r\n        </div>\r\n    )        \r\n\r\n}\r\n\r\n\r\n","/home/marc/MastrMind/root/mastrmind_frontend/src/components/controller/event.js",["93","94","95","96","97","98","99"],"import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography, Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Controller from '../controller/controller'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(10),\r\n        position: 'absolute',\r\n        top: theme.spacing(20),\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    },\r\n    padding: {\r\n        padding: theme.spacing(3)\r\n    }\r\n\r\n\r\n}))\r\n\r\nexport default function Event(props) {\r\n\r\n    const { title, children, openEvent, setOpenEvent } = props;\r\n    const classes = useStyles();\r\n    const CHARACTER_LIMIT = 25;\r\n    const [values, setValues] = React.useState({\r\n      name: \"\"\r\n    });\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, [name]: event.target.value });\r\n    };\r\n\r\n    return (\r\n        <Dialog open = {openEvent} maxWidth=\"sm\">\r\n            <DialogTitle position=\"center\">\r\n                <div style = {{display: 'flex'}}>\r\n                    <Typography className={classes.padding} variant=\"h6\">\r\n                        \r\n                        ADD A NEW EVENT \r\n                    </Typography>\r\n                    \r\n                    <CloseIcon\r\n                    color = \"secondary\"\r\n                    variant = \"text\"\r\n                    size = \"small\"\r\n                    onClick = {() => { values.name = \"\"; setOpenEvent(false);}}\r\n                />\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n            <FormGroup aria-label=\"position\" column>\r\n                <TextField\r\n                    label=\"   Event Title   \"\r\n                    inputProps={{\r\n                    maxlength: CHARACTER_LIMIT\r\n                    }}\r\n                    value={values.name}\r\n                    helperText={`${values.name.length}/${CHARACTER_LIMIT}`}\r\n                    onChange={handleChange(\"name\")}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                />\r\n\r\n                <Controller.Button\r\n                    text = \"Add Event\"\r\n                    color = \"primary\"\r\n                    variant = \"outlined\"\r\n                    onClick = {() => { values.name = \"\"; setOpenEvent(false);}}\r\n                />\r\n\r\n                \r\n\r\n            </FormGroup>\r\n\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}",{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":2,"column":8,"nodeType":"106","messageId":"107","endLine":2,"endColumn":20},{"ruleId":"104","severity":1,"message":"108","line":2,"column":24,"nodeType":"106","messageId":"107","endLine":2,"endColumn":34},{"ruleId":"104","severity":1,"message":"109","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":21},{"ruleId":"104","severity":1,"message":"110","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":22},{"ruleId":"104","severity":1,"message":"111","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":25},{"ruleId":"104","severity":1,"message":"112","line":6,"column":10,"nodeType":"106","messageId":"107","endLine":6,"endColumn":24},{"ruleId":"104","severity":1,"message":"113","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":15},{"ruleId":"104","severity":1,"message":"114","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":17},{"ruleId":"104","severity":1,"message":"115","line":26,"column":13,"nodeType":"106","messageId":"107","endLine":26,"endColumn":18},{"ruleId":"104","severity":1,"message":"116","line":26,"column":20,"nodeType":"106","messageId":"107","endLine":26,"endColumn":28},{"ruleId":"117","severity":1,"message":"118","line":50,"column":21,"nodeType":"119","endLine":50,"endColumn":42},{"ruleId":"104","severity":1,"message":"108","line":1,"column":24,"nodeType":"106","messageId":"107","endLine":1,"endColumn":34},{"ruleId":"104","severity":1,"message":"120","line":5,"column":26,"nodeType":"106","messageId":"107","endLine":5,"endColumn":39},{"ruleId":"104","severity":1,"message":"121","line":15,"column":12,"nodeType":"106","messageId":"107","endLine":15,"endColumn":17},{"ruleId":"104","severity":1,"message":"122","line":15,"column":19,"nodeType":"106","messageId":"107","endLine":15,"endColumn":27},{"ruleId":"104","severity":1,"message":"123","line":2,"column":70,"nodeType":"106","messageId":"107","endLine":2,"endColumn":73},{"ruleId":"104","severity":1,"message":"124","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":24},{"ruleId":"104","severity":1,"message":"125","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":17},{"ruleId":"104","severity":1,"message":"126","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":13},{"ruleId":"104","severity":1,"message":"127","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":18},{"ruleId":"104","severity":1,"message":"115","line":33,"column":13,"nodeType":"106","messageId":"107","endLine":33,"endColumn":18},{"ruleId":"104","severity":1,"message":"116","line":33,"column":20,"nodeType":"106","messageId":"107","endLine":33,"endColumn":28},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'FullCalendar' is defined but never used.","Identifier","unusedVar","'formatDate' is defined but never used.","'dayGridPlugin' is defined but never used.","'timeGridPlugin' is defined but never used.","'interactionPlugin' is defined but never used.","'INITIAL_EVENTS' is defined but never used.","'newtask' is defined but never used.","'TextField' is defined but never used.","'title' is assigned a value but never used.","'children' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'createEventId' is defined but never used.","'event' is assigned a value but never used.","'setEvent' is assigned a value but never used.","'Box' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]