[{"/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/index.js":"1","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/App.js":"2","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/context/user_context.js":"3","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/auth/loginPage.js":"4","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/auth/registerPage.js":"5","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/pages/home.js":"6","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/layout/header.js":"7","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/auth/options.js":"8","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/Router.js":"9","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/pages/Profile.js":"10","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/pages/Calendar.js":"11","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/auth/logout.js":"12"},{"size":204,"mtime":1617481904293,"results":"13","hashOfConfig":"14"},{"size":424,"mtime":1617481904323,"results":"15","hashOfConfig":"14"},{"size":852,"mtime":1617481904293,"results":"16","hashOfConfig":"14"},{"size":3919,"mtime":1617692512251,"results":"17","hashOfConfig":"14"},{"size":4385,"mtime":1617481904289,"results":"18","hashOfConfig":"14"},{"size":691,"mtime":1617924087322,"results":"19","hashOfConfig":"14"},{"size":797,"mtime":1617481704855,"results":"20","hashOfConfig":"14"},{"size":2911,"mtime":1617836333780,"results":"21","hashOfConfig":"14"},{"size":2671,"mtime":1617836266090,"results":"22","hashOfConfig":"14"},{"size":10366,"mtime":1618048509415,"results":"23","hashOfConfig":"14"},{"size":1656,"mtime":1617481904290,"results":"24","hashOfConfig":"14"},{"size":685,"mtime":1617481904288,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"16ncd7l",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/index.js",[],["57","58"],"/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/App.js",["59","60"],"import React, {useState, useEffect} from 'react';\nimport Router from './Router'\nimport { AuthContextProvider } from './context/user_context';\nimport axios from 'axios';\n\nimport \"./layout.css\";\n\naxios.defaults.withCredentials = true; // MAKE SURE THIS INCLUDED OR IT WILL NOT WORK\n\n\nfunction App() {\n    return (\n        <AuthContextProvider>\n            <Router/>\n        </AuthContextProvider>\n    )\n}\n\nexport default App;\n","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/context/user_context.js",[],"/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/auth/loginPage.js",[],"/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/auth/registerPage.js",[],"/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/pages/home.js",["61"],"import React, { useContext }from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Typography } from '@material-ui/core';\nimport AuthContext from \"../../context/user_context\";\n\nexport default function Home() {\n    \n    const history = useHistory();\n    const { loggedIn } = useContext(AuthContext);\n\n    return (\n        <>\n        { loggedIn === true && (\n        <div>\n            <Typography variant = \"h3\" >Welcome to Mastrmind! You're Logged In! </Typography>\n        </div>\n        )}\n        { loggedIn === false && (\n        <div>\n            <Typography variant = \"h3\"> Welcome to Mastrmind! Please Login! </Typography>\n        </div>\n        )}\n        </>\n    );\n}\n","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/layout/header.js",[],"/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/auth/options.js",["62","63"],"import React, { useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext  from \"../../context/user_context\"\nimport {Button, Menu, MenuItem} from \"@material-ui/core\"\nimport { createUseStyles } from 'react-jss'\n\nconst useStyles = createUseStyles({\n    root: {\n    paddingTop: 9,\n  }\n})\n\nexport default function Options() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const { userData, setUserData, loggedIn } = useContext(AuthContext);\n    // console.log(userData);\n    const history = useHistory();\n\n    const registration = () => {\n      history.push(\"/register\");\n      setAnchorEl(null);\n    };\n    const login = () => {\n      console.log(\"going to login page\");\n      history.push(\"/login\");\n      setAnchorEl(null);\n    };\n    const logout = () => {\n      console.log(\"going to logout\");\n      history.push(\"/logout\");\n      setAnchorEl(null);\n    };\n\n    const profile = () => {\n      history.push(\"/profile\");\n      setAnchorEl(null);\n    };\n    \n    const dashboard = () => {\n      history.push(\"/dashboard\");\n      setAnchorEl(null);\n    }\n\n    const journal = () => {\n      history.push(\"/journal\");\n      setAnchorEl(null);\n    }\n\n    const classes = useStyles();\n\n    return (\n        <nav className=\"options\">\n          {loggedIn === true ? (\n            <>\n            <div className={classes.root}>\n              <Button size=\"large\" aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                Menu\n                </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick = {dashboard}> Dashboard </MenuItem>\n                <MenuItem onClick = {journal}> Journal </MenuItem>\n                <MenuItem onClick = {profile}> Profile </MenuItem>\n                <MenuItem onClick={logout} >Logout </MenuItem>\n\n              </Menu>\n            </div>\n            </>\n          ) : (\n            <>\n              <div className={classes.root}>\n                <Button size=\"large\" aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                  Menu\n                </Button>\n                <Menu\n                  id=\"simple-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                >\n                  <MenuItem onClick={registration}>Register</MenuItem>\n                  <MenuItem onClick={login}>Login</MenuItem>\n                </Menu>\n              </div>\n            </>\n            \n          )}\n        </nav>\n      );\n}\n",["64","65"],"/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/Router.js",[],"/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/pages/Profile.js",["66","67","68","69","70"],"import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { \n    Button, Typography, makeStyles, \n    Grid, TextField, Avatar, \n    Card, Paper, Divider, \n    CardHeader, CardMedia, CardContent,\n    CardActions, Collapse, IconButton\n} from '@material-ui/core'\nimport AuthContext from './../../context/user_context';\nimport Axios from 'axios';\nimport MMProfPic1 from \"./../assets/mastrmind-prof-pic-1.png\";\n// import SvgIcon from \"@material-ui/icons\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMoreOutlined\";\nimport clsx from 'clsx';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(2),\n            width: '40ch',\n        },\n    },\n    avatar: {\n        height: '15ch',\n        width: '15ch'\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%'\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n}));\n\nconst retrieveCurrentUser = async () => {    \n    await Axios.get(`http://localhost:3001/auth/profile`);\n}\n\nfunction EventCardHeader(props) {\n    return (\n            <CardHeader \n                avatar = {\n                    <Avatar \n                        aria-label = \"Profile Pic\"\n                        src = {props.avatar}\n                    />\n                }\n                title = {props.title}\n                subheader = {props.subheader}\n                className = {props.className}\n            />\n    )\n} \n\nfunction EventCardMedia(props) {\n    // this requires a height on the photo or it won't display.\n\n    return (\n        <CardMedia \n        className = {props.className}\n        image = {props.image}\n        alt = {props.alt} />\n    )\n}\n\nfunction EventCard(props) {\n    // look into making this a dynamic card so i can make a card for every event that a user has.\n    // also going to need a boolean that will display no cards and a message if there is an event.\n    const classes = useStyles();\n    const [ expanded, setExpanded ] = useState(false);\n\n    // Needed to be able to open our cards.\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n    \n    return (\n        <Grid item>\n            <Card variant = \"outlined\" className = {classes.root}>\n            <EventCardHeader \n                avatar = {props.avatar} \n                title = {props.eventHeaderTitle} \n                subheader = {props.eventHeaderDate}\n                />\n            <EventCardMedia className = {classes.media} image = {props.cardMediaImage} alt = \"Event Picture\" />\n            <CardContent> \n                <Typography align = \"center\">\n                    You have an event coming up!\n                </Typography>\n            </CardContent>\n            <Divider />\n            <CardActions>\n                <IconButton className = {\n                    clsx(classes.expand, {[classes.expandOpen]: expanded,})\n                    } \n                    onClick = {handleExpandClick} \n                    aria-expanded = {expanded} \n                    aria-label=\"Show More\" \n                    align = \"right\">\n                    <ExpandMoreIcon/>\n                </IconButton>\n            </CardActions>\n            <Collapse in = {expanded} timeout = \"auto\" unmountOnExit>\n                <CardContent>\n                    <Typography paragraph>\n                        {props.eventDescription}\n                    </Typography>\n                </CardContent>\n            </Collapse>\n        </Card>\n        </Grid>\n    )\n}\n\nfunction ProfileCard(props) {\n    // TODO: Dynamic data from each profile.\n    const classes = useStyles();\n    // const padding = {padding: 40}\n\n    return (\n        <Grid item> \n            <Grid container direction = \"column\" justify = \"left\" className = \"profile-card\">\n                <Paper variant = \"elevation\" elevation = {2} className = \"profile-background\">\n                    <CardHeader title = {`Welcome ${props.username}`}/>\n                    <Divider />\n                    <Grid item>\n                        <Card className = {classes.root} justify = \"left\">\n                            <Grid item align = \"center\">\n                                <Avatar alt = \"Profile Picture\" align = \"center\" className = {classes.avatar} src = {props.profileAvatar} />\n                            </Grid>\n                            <Divider />\n                            <Grid item>\n                                <Typography variant = \"overline\"> Full Name </Typography>\n                                <Typography variant = \"h6\"> {props.fullName} </Typography>\n                            </Grid> \n\n                            <Grid item>\n                                <Typography variant = \"overline\"> Username </Typography>\n                                <Typography variant = \"h6\"> {props.username} </Typography>\n                            </Grid>\n\n                            <Grid item>\n                                <Typography variant = \"overline\"> Birthday </Typography>\n                                <Typography variant = \"h6\"> {props.birthDate} </Typography>\n                            </Grid>\n                            \n                            <Grid item>\n                                <Typography variant = \"overline\"> Biography </Typography>\n                                <Typography variant = \"body1\"> {props.userBio} </Typography>\n                            </Grid>\n                        </Card>\n                    </Grid>\n                </Paper>\n            </Grid>\n        </Grid>\n    )\n}\n\nfunction BadgeCard(props) {\n    const classes = useStyles();\n\n    return (\n        <Grid item>\n            <Grid container direction = \"column\" className = \"badges-card\">\n                <Paper variant = \"elevation\" elevation = {2} className = \"badges-background\">\n                    <CardHeader title = {`${props.username}'s Badges`} align = \"left\" />\n                    <Grid item>\n                        <Card className = {classes.root}>\n                            <Grid item>\n                                <Typography variant = \"overline\">\n                                    Recent Badges:\n                                </Typography>\n                                <Typography variant = \"body1\">\n                                    {props.badges}\n                                </Typography>\n                                <Typography variant = \"overline\">\n                                    Daily Challenges:\n                                </Typography>\n                                <Typography variant = \"body1\">\n                                    {props.dailyChallenges}\n                                </Typography>\n                                <Typography variant = \"overline\">\n                                    Weekly Challenges: \n                                </Typography>\n                                <Typography variant = \"body1\">\n                                    {props.weeklyChallenges}\n                                </Typography>\n                            </Grid>\n                        </Card>\n                    </Grid>\n                </Paper>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default function Profile() {\n    // Styles for Our Component\n    // const classes = useStyles();\n    const padding = { padding: 40 }\n    const [ expanded, setExpanded ] = useState(false);\n\n    retrieveCurrentUser();\n\n    // Needed to hold the history and working user context of our application.\n    const history = useHistory();\n    const { loggedIn } = useContext(AuthContext);\n\n    // Holding the information about our user.\n\n    // Needed to be able to open our cards.\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        // conditional code for if a user is logged in as the correct user.\n\n        <div className = \"profile-page\">\n            {/* starting with a container */}\n            <Grid container justify = \"left\" spacing = \"3\" direction = \"row\" style = {padding} >\n            {/* needs a photo in the box */}\n                <ProfileCard username = \"Dynamic Guy\" fullName = \"Lawrence Marquez\" birthDate = \"June 30th 1997\" userBio = \"yoooooo\"/>\n                <BadgeCard username = \"Dynamic Guy\" badges = {\"cool guy badge: do 3 cool things today\"} dailyChallenges = {\"eat a cookie today\"} weeklyChallenges = {\"meditate everyday\"} />\n                \n                <Grid container>\n                    <Grid container direction = \"row\" className = \"profile-events\">\n                        <Typography variant = \"h3\" align = \"left\"> Events </Typography>\n                        {/* I want to create cards with events that are\n                            upcoming or just anything that may be scheduled. */}\n                    </Grid>\n\n                    <Grid container direction = \"row\">\n                        {/* \n                            I want to dynamically create cards maybe right here but not sure how that will get done.\n                            I also want to create a scroll bar that will be created based on the amount of events\n                            that are available.\n                        */}\n\n                        <EventCard \n                            avatar = {MMProfPic1}\n                            eventHeaderTitle = {\"Dynamic Event Card\"}\n                            eventHeaderDate = {\"April 10 2021\"}\n                            cardMediaImage = {MMProfPic1} \n                            eventDescription = {\"Lorem Ipsum Text\"}\n                        />\n                    </Grid>\n\n                </Grid>\n            </Grid>\n        </div>\n\n    )\n}\n\n// Default Information Needed for Our Components\n\nBadgeCard.defaultProps = {\n    badges: \"No Badges Yet!\",\n    dailyChallenges: \"No Daily Challenges Avaiable Yet!\",\n    weeklyChallenges: \"No Weekly Challenges Avaiable Yet!\"\n}\n\nProfileCard.defaultProps = {\n    birthDate: \"No Birth Date for User!\",\n    userBio: \"No User Biography is available!\"\n}\n\nEventCard.defaultProps = {\n    eventHeaderTitle: \"Event\",\n    eventDescription: \"No Description for This Event!\"\n}","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/pages/Calendar.js",["71","72","73"],"import React from 'react';\nimport FullCalendar, { formatDate } from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nexport default function Calendar() {\n    const state = {\n        weekendsVisible: true,\n        currentEvents: []\n    }\n\n    function handleEventDrop(arg) {\n        if(window.confirm(`Would you like to add an event to ${arg.dateStr}?`)) {\n        // add new event data\n        currentEvents: this.state.currentEvents.concat({\n            // creates a new array\n            title: \"New Event\",\n            start: arg.date,\n            allDay: arg.allDay\n            });\n        }\n    }\n\n    function handleEventClick() {\n        console.log(\"i am an event who has been clicked!\")\n    }\n\n    return (\n        <FullCalendar \n            defaultView=\"dayGridMonth\" \n            eventTimeFormat = {{\n                hour: '2-digit',\n                minute: '2-digit',\n                hour12: false,\n                meridiem: false\n            }}\n            header = {{\n                left: 'dayGridMonth,timeGridWeek,timeGridDay',\n                center: 'Calendar',\n                right: 'prev, next today'\n            }\n            }\n            plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin ]} \n            intialView = 'dayGridMonth'\n            editable = {true}\n            selectable = {true}\n            dayMaxEvents = {true}\n            eventDrop = {handleEventDrop}\n            eventClick = {handleEventClick}\n            events = {state.currentEvents}\n\n        />\n    );\n}\n    \n","/Users/reactionz/Desktop/senior project/MastrMind/root/mastrmind_frontend/src/components/auth/logout.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":24},{"ruleId":"78","severity":1,"message":"82","line":1,"column":26,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"78","severity":1,"message":"83","line":8,"column":11,"nodeType":"80","messageId":"81","endLine":8,"endColumn":18},{"ruleId":"78","severity":1,"message":"84","line":24,"column":13,"nodeType":"80","messageId":"81","endLine":24,"endColumn":21},{"ruleId":"78","severity":1,"message":"85","line":24,"column":23,"nodeType":"80","messageId":"81","endLine":24,"endColumn":34},{"ruleId":"74","replacedBy":"86"},{"ruleId":"76","replacedBy":"87"},{"ruleId":"78","severity":1,"message":"88","line":4,"column":5,"nodeType":"80","messageId":"81","endLine":4,"endColumn":11},{"ruleId":"78","severity":1,"message":"89","line":5,"column":11,"nodeType":"80","messageId":"81","endLine":5,"endColumn":20},{"ruleId":"78","severity":1,"message":"83","line":216,"column":11,"nodeType":"80","messageId":"81","endLine":216,"endColumn":18},{"ruleId":"78","severity":1,"message":"90","line":217,"column":13,"nodeType":"80","messageId":"81","endLine":217,"endColumn":21},{"ruleId":"78","severity":1,"message":"91","line":222,"column":11,"nodeType":"80","messageId":"81","endLine":222,"endColumn":28},{"ruleId":"78","severity":1,"message":"92","line":2,"column":24,"nodeType":"80","messageId":"81","endLine":2,"endColumn":34},{"ruleId":"93","severity":1,"message":"94","line":16,"column":9,"nodeType":"95","messageId":"96","endLine":21,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":16,"column":9,"nodeType":"80","messageId":"99","endLine":16,"endColumn":22,"fix":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'history' is assigned a value but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.",["101"],["102"],"'Button' is defined but never used.","'TextField' is defined but never used.","'loggedIn' is assigned a value but never used.","'handleExpandClick' is assigned a value but never used.","'formatDate' is defined but never used.","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'currentEvents:' is defined but never used.","unused",{"range":"103","text":"104"},"no-global-assign","no-unsafe-negation",[532,547],""]